[
    // https://www.sublimetext.com/docs/3/key_bindings.html
    // http://docs.sublimetext.info/en/latest/customization/key_bindings.html
    // http://docs.sublimetext.info/en/latest/reference/commands.html
    // examples: https://github.com/fjl/Sublime-Missing-Palette-Commands/blob/st3/Missing.sublime-commands
    //
    // show executed commands: sublime.log_commands(True);
    {
        "keys": ["ctrl+tab"],
        "command": "next_view"
    },
    {
        "keys": ["ctrl+shift+tab"],
        "command": "prev_view"
    },
    {
        // font size reset with revert_font_size.py
        "keys": ["primary+0"],
        "command": "revert_font_size"
    },

    {
        // open with default
        "keys": ["primary+d"],
        "command": "open_default_for_current_view"
    },

    {
        // manage comments
        "keys": ["primary+7"],
        "command": "toggle_comment",
        "args": {
            "block": true
        }
    },
    {
        "keys": ["primary+shift+7"],
        "command": "toggle_comment",
        "args": {
            "block": false
        }
    },

    {
        // code indentation
        "keys": ["f12"],
        "command": "reindent",
        "args": {
            "single_line": false
        }
    },

    {
        // PHP
        "keys": ["f6"],
        "command": "expand_fqcn"
    },
    {
        "keys": ["shift+f6"],
        "command": "expand_fqcn",
        "args": {
            "leading_separator": true
        }
    },
    {
        "keys": ["f5"],
        "command": "find_use"
    },
    {
        "keys": ["f4"],
        "command": "import_namespace"
    },
    {
        "keys": ["f3"],
        "command": "implement"
    },
    {
        "keys": ["shift+f12"],
        "command": "goto_definition_scope"
    },
    {
        "keys": ["f7"],
        "command": "insert_php_constructor_property"
    },

    {
        "keys": ["alt+1"],
        "command": "fold_by_level",
        "args": {
            "level": 1
        }
    },
    {
        "keys": ["alt+2"],
        "command": "fold_by_level",
        "args": {
            "level": 2
        }
    },
    {
        "keys": ["alt+3"],
        "command": "fold_by_level",
        "args": {
            "level": 3
        }
    },
    {
        "keys": ["alt+4"],
        "command": "fold_by_level",
        "args": {
            "level": 4
        }
    },

    {
        "keys": ["alt+="],
        "command": "fold_all"
    },
    {
        "keys": ["alt+-"],
        "command": "unfold_all"
    },

    // { // Quit everything
    //     "keys": ["alt+f4"],
    //     "command": "chain",
    //     "args":
    //     {
    //         "commands": [
    //             ["close_workspace"],
    //             ["close"]
    //         ]
    //     }
    // },

    // {
    //     "keys": ["primary+q"],
    //     "command": "chain",
    //     "args":
    //     {
    //         "commands": [
    //             ["close_workspace"],
    //             ["close"]
    //         ]
    //     }
    // },

    // close Workspace
    {
        "keys": ["primary+alt+w"],
        "command": "close_workspace"
    },
    {
        "keys": ["primary+shift+w"],
        "command": "close_workspace"
    },

    {
        "keys": ["primary+alt+p"],
        "command": "prompt_select_workspace"
    },

    {
        "keys": ["primary+shift+alt+p"],
        "command": "project_manager",
        "args": {
            "action": "switch"
        }
    },

    {
        //undo close tab
        "keys": ["primary+shift+t"],
        "command": "scb_undo_tab"
    },

    {
        // goto file
        "keys": ["primary+shift+g"],
        "command": "open_file_folder"
    },
    {
        // goto project
        "keys": ["primary+shift+alt+g"],
        "command": "open_project_folder"
    },

    {
        // always use the "replace" search panel
        "keys": ["primary+f"],
        "command": "show_panel",
        "args": {
            "panel": "replace",
            "reverse": false
        }
    },

    // Sidebar stuff (osx only)
    {
        "keys": ["alt+tab"],
        "command": "focus_file_on_sidebar",
        "args": {}
    },
    {
        "keys": ["alt+shift+tab"],
        "command": "toggle_minimap",
        "args": {}
    },

    // Settings Shortcuts
    {
        "keys": ["primary+,"],
        "command": "edit_settings ",
        "args": {
            "base_file": "${packages}/Default/Preferences.sublime-settings"
        }
    },
    {
        "keys": ["primary+alt+,"],
        "command": "edit_settings ",
        "args": {
            "base_file": "${packages}/Default/Default ($platform).sublime-keymap"
        }
    },

    {
        "keys": ["primary+shift+,"],
        "command": "edit_settings ",
        "args": {
            "base_file": "${packages}/Default/Default.sublime-commands"
        }
    },

    {
        "keys": ["primary+shift+alt+,"],
        "command": "edit_settings ",
        "args": {
            "base_file": "${packages}/Default/Default ($platform).sublime-mousemap"
        }
    },

    {
        // deselect selection with escape
        "keys": ["escape"],
        "command": "deselect",
        "context": [
            {
                "key": "selection_empty",
                "operator": "equal",
                "operand": false,
                "match_all": true
            }
        ]
    },

    {
        // external Terminal
        "keys": ["primary+shift+`"],
        "command": "open_terminal_project_folder"
    },

    {
        // Terminus Panel https://github.com/randy3k/Terminus#user-key-bindings

        "keys": ["alt+`"],
        "command": "toggle_terminus_panel",
        "args": {
            "config_name": "Default",
            "cwd": "${file_path:${project}}"
        }
    },

    {
        // Terminus Page
        "keys": ["shift+alt+`"],
        "command": "terminus_open",
        "args": {
            "config_name": "Default",
            "cwd": " ${file_path:${project}}"
        }
    },

    {
        // lookup with dash doc / zeal
        "keys": ["primary+shift+/"],
        "command": "dash_doc"
    },

    {
        "keys": ["alt+h"], // aka. header
        "command": "switch_file_deluxe",
        "args": {
            "extensions": [
                ".cpp",
                ".cxx",
                ".cc",
                ".c",
                "Qt.cpp",
                "Qt.h",
                ".hpp",
                ".hxx",
                ".h",
                "_p.h",
                "_p_p.h",
                ".ipp",
                ".inl",
                ".m",
                ".mm"
            ],
            "paths": ["../impl", "../include"]
        }
    },

    {
        // add newline
        "keys": ["shift+enter"],
        "command": "run_macro_file",
        "args": {
            "file": "res://Packages/User/Macros/new_unindented_line_before.sublime-macro"
        }
    },

    {
        // mirrors shift+delete
        "keys": ["shift+backspace"],
        "command": "run_macro_file",
        "args": {
            "file": "res://Packages/Default/Delete to EOL.sublime-macro"
        }
    },

    {
        "keys": ["alt+space"],
        "command": "show_overlay",
        "args": {
            "overlay": "goto",
            "show_files": true
        }
    },

    //Origami (Panes)
    // commands: https://github.com/SublimeText/Origami/blob/master/Main.sublime-menu
    // Group Changing Prefix is primary+alt
    {
        "keys": ["alt+shift+h"],
        "command": "travel_to_pane",
        "args": {
            "direction": "left"
        }
    },
    {
        "keys": ["alt+shift+j"],
        "command": "travel_to_pane",
        "args": {
            "direction": "down"
        }
    },
    {
        "keys": ["alt+shift+k"],
        "command": "travel_to_pane",
        "args": {
            "direction": "up"
        }
    },
    {
        "keys": ["alt+shift+l"],
        "command": "travel_to_pane",
        "args": {
            "direction": "right"
        }
    },

    {
        "keys": ["alt+shift+w"],
        "command": "destroy_pane",
        "args": {
            "direction": "self"
        }
    },

    // destroy_pane
    {
        "keys": ["primary+alt+shift+h"],
        "command": "destroy_pane",
        "args": {
            "direction": "left"
        }
    },
    {
        "keys": ["primary+alt+shift+j"],
        "command": "destroy_pane",
        "args": {
            "direction": "down"
        }
    },
    {
        "keys": ["primary+alt+shift+k"],
        "command": "destroy_pane",
        "args": {
            "direction": "up"
        }
    },
    {
        "keys": ["primary+alt+shift+l"],
        "command": "destroy_pane",
        "args": {
            "direction": "right"
        }
    }
]
